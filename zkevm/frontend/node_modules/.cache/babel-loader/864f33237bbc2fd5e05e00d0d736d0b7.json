{"ast":null,"code":"exports.utf8 = exports['utf-8'] = {\n  encode: function (data) {\n    return isBinary(data) ? data : String(data);\n  },\n  decode: function (data) {\n    return typeof data === 'string' ? data : String(data);\n  },\n  buffer: false,\n  type: 'utf8'\n};\nexports.json = {\n  encode: JSON.stringify,\n  decode: JSON.parse,\n  buffer: false,\n  type: 'json'\n};\nexports.binary = {\n  encode: function (data) {\n    return isBinary(data) ? data : new Buffer(data);\n  },\n  decode: identity,\n  buffer: true,\n  type: 'binary'\n};\nexports.none = {\n  encode: identity,\n  decode: identity,\n  buffer: false,\n  type: 'id'\n};\nexports.id = exports.none;\nvar bufferEncodings = ['hex', 'ascii', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le'];\nbufferEncodings.forEach(function (type) {\n  exports[type] = {\n    encode: function (data) {\n      return isBinary(data) ? data : new Buffer(data, type);\n    },\n    decode: function (buffer) {\n      return buffer.toString(type);\n    },\n    buffer: true,\n    type: type\n  };\n});\nfunction identity(value) {\n  return value;\n}\nfunction isBinary(data) {\n  return data === undefined || data === null || Buffer.isBuffer(data);\n}","map":{"version":3,"names":["exports","utf8","encode","data","isBinary","String","decode","buffer","type","json","JSON","stringify","parse","binary","Buffer","identity","none","id","bufferEncodings","forEach","toString","value","undefined","isBuffer"],"sources":["/home/tiptape/relearningculture/zkevm/frontend/node_modules/level-codec/lib/encodings.js"],"sourcesContent":["exports.utf8 = exports['utf-8'] = {\n  encode: function(data){\n    return isBinary(data)\n      ? data\n      : String(data);\n  },\n  decode: function(data){\n    return typeof data === 'string'\n      ? data\n      : String(data)\n  },\n  buffer: false,\n  type: 'utf8'\n};\n\nexports.json = {\n  encode: JSON.stringify,\n  decode: JSON.parse,\n  buffer: false,\n  type: 'json'\n};\n\nexports.binary = {\n  encode: function(data){\n    return isBinary(data)\n      ? data\n      : new Buffer(data);      \n  },\n  decode: identity,\n  buffer: true,\n  type: 'binary'\n};\n\nexports.none = {\n  encode: identity,\n  decode: identity,\n  buffer: false,\n  type: 'id'\n};\n\nexports.id = exports.none;\n\nvar bufferEncodings = [\n  'hex',\n  'ascii',\n  'base64',\n  'ucs2',\n  'ucs-2',\n  'utf16le',\n  'utf-16le'\n];\n\nbufferEncodings.forEach(function(type){\n  exports[type] = {\n    encode: function(data){\n      return isBinary(data)\n        ? data\n        : new Buffer(data, type);\n    },\n    decode: function(buffer){\n      return buffer.toString(type);\n    },\n    buffer: true,\n    type: type\n  };\n});\n\nfunction identity(value){\n  return value;\n}\n\nfunction isBinary(data){\n  return data === undefined\n    || data === null\n    || Buffer.isBuffer(data);\n}\n"],"mappings":"AAAAA,OAAO,CAACC,IAAI,GAAGD,OAAO,CAAC,OAAO,CAAC,GAAG;EAChCE,MAAM,EAAE,UAASC,IAAI,EAAC;IACpB,OAAOC,QAAQ,CAACD,IAAI,CAAC,GACjBA,IAAI,GACJE,MAAM,CAACF,IAAI,CAAC;EAClB,CAAC;EACDG,MAAM,EAAE,UAASH,IAAI,EAAC;IACpB,OAAO,OAAOA,IAAI,KAAK,QAAQ,GAC3BA,IAAI,GACJE,MAAM,CAACF,IAAI,CAAC;EAClB,CAAC;EACDI,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE;AACR,CAAC;AAEDR,OAAO,CAACS,IAAI,GAAG;EACbP,MAAM,EAAEQ,IAAI,CAACC,SAAS;EACtBL,MAAM,EAAEI,IAAI,CAACE,KAAK;EAClBL,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE;AACR,CAAC;AAEDR,OAAO,CAACa,MAAM,GAAG;EACfX,MAAM,EAAE,UAASC,IAAI,EAAC;IACpB,OAAOC,QAAQ,CAACD,IAAI,CAAC,GACjBA,IAAI,GACJ,IAAIW,MAAM,CAACX,IAAI,CAAC;EACtB,CAAC;EACDG,MAAM,EAAES,QAAQ;EAChBR,MAAM,EAAE,IAAI;EACZC,IAAI,EAAE;AACR,CAAC;AAEDR,OAAO,CAACgB,IAAI,GAAG;EACbd,MAAM,EAAEa,QAAQ;EAChBT,MAAM,EAAES,QAAQ;EAChBR,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE;AACR,CAAC;AAEDR,OAAO,CAACiB,EAAE,GAAGjB,OAAO,CAACgB,IAAI;AAEzB,IAAIE,eAAe,GAAG,CACpB,KAAK,EACL,OAAO,EACP,QAAQ,EACR,MAAM,EACN,OAAO,EACP,SAAS,EACT,UAAU,CACX;AAEDA,eAAe,CAACC,OAAO,CAAC,UAASX,IAAI,EAAC;EACpCR,OAAO,CAACQ,IAAI,CAAC,GAAG;IACdN,MAAM,EAAE,UAASC,IAAI,EAAC;MACpB,OAAOC,QAAQ,CAACD,IAAI,CAAC,GACjBA,IAAI,GACJ,IAAIW,MAAM,CAACX,IAAI,EAAEK,IAAI,CAAC;IAC5B,CAAC;IACDF,MAAM,EAAE,UAASC,MAAM,EAAC;MACtB,OAAOA,MAAM,CAACa,QAAQ,CAACZ,IAAI,CAAC;IAC9B,CAAC;IACDD,MAAM,EAAE,IAAI;IACZC,IAAI,EAAEA;EACR,CAAC;AACH,CAAC,CAAC;AAEF,SAASO,QAAQ,CAACM,KAAK,EAAC;EACtB,OAAOA,KAAK;AACd;AAEA,SAASjB,QAAQ,CAACD,IAAI,EAAC;EACrB,OAAOA,IAAI,KAAKmB,SAAS,IACpBnB,IAAI,KAAK,IAAI,IACbW,MAAM,CAACS,QAAQ,CAACpB,IAAI,CAAC;AAC5B"},"metadata":{},"sourceType":"script"}