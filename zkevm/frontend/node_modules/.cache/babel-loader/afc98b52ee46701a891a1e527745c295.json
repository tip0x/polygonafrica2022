{"ast":null,"code":"var encodings = require('./lib/encodings');\nmodule.exports = Codec;\nfunction Codec(opts) {\n  this.opts = opts || {};\n  this.encodings = encodings;\n}\nCodec.prototype._encoding = function (encoding) {\n  if (typeof encoding == 'string') encoding = encodings[encoding];\n  if (!encoding) encoding = encodings.id;\n  return encoding;\n};\nCodec.prototype._keyEncoding = function (opts, batchOpts) {\n  return this._encoding(batchOpts && batchOpts.keyEncoding || opts && opts.keyEncoding || this.opts.keyEncoding);\n};\nCodec.prototype._valueEncoding = function (opts, batchOpts) {\n  return this._encoding(batchOpts && (batchOpts.valueEncoding || batchOpts.encoding) || opts && (opts.valueEncoding || opts.encoding) || this.opts.valueEncoding || this.opts.encoding);\n};\nCodec.prototype.encodeKey = function (key, opts, batchOpts) {\n  return this._keyEncoding(opts, batchOpts).encode(key);\n};\nCodec.prototype.encodeValue = function (value, opts, batchOpts) {\n  return this._valueEncoding(opts, batchOpts).encode(value);\n};\nCodec.prototype.decodeKey = function (key, opts) {\n  return this._keyEncoding(opts).decode(key);\n};\nCodec.prototype.decodeValue = function (value, opts) {\n  return this._valueEncoding(opts).decode(value);\n};\nCodec.prototype.encodeBatch = function (ops, opts) {\n  var self = this;\n  return ops.map(function (_op) {\n    var op = {\n      type: _op.type,\n      key: self.encodeKey(_op.key, opts, _op)\n    };\n    if (self.keyAsBuffer(opts, _op)) op.keyEncoding = 'binary';\n    if (_op.prefix) op.prefix = _op.prefix;\n    if ('value' in _op) {\n      op.value = self.encodeValue(_op.value, opts, _op);\n      if (self.valueAsBuffer(opts, _op)) op.valueEncoding = 'binary';\n    }\n    return op;\n  });\n};\nvar ltgtKeys = ['lt', 'gt', 'lte', 'gte', 'start', 'end'];\nCodec.prototype.encodeLtgt = function (ltgt) {\n  var self = this;\n  var ret = {};\n  Object.keys(ltgt).forEach(function (key) {\n    ret[key] = ltgtKeys.indexOf(key) > -1 ? self.encodeKey(ltgt[key], ltgt) : ltgt[key];\n  });\n  return ret;\n};\nCodec.prototype.createStreamDecoder = function (opts) {\n  var self = this;\n  if (opts.keys && opts.values) {\n    return function (key, value) {\n      return {\n        key: self.decodeKey(key, opts),\n        value: self.decodeValue(value, opts)\n      };\n    };\n  } else if (opts.keys) {\n    return function (key) {\n      return self.decodeKey(key, opts);\n    };\n  } else if (opts.values) {\n    return function (_, value) {\n      return self.decodeValue(value, opts);\n    };\n  } else {\n    return function () {};\n  }\n};\nCodec.prototype.keyAsBuffer = function (opts) {\n  return this._keyEncoding(opts).buffer;\n};\nCodec.prototype.valueAsBuffer = function (opts) {\n  return this._valueEncoding(opts).buffer;\n};","map":{"version":3,"names":["encodings","require","module","exports","Codec","opts","prototype","_encoding","encoding","id","_keyEncoding","batchOpts","keyEncoding","_valueEncoding","valueEncoding","encodeKey","key","encode","encodeValue","value","decodeKey","decode","decodeValue","encodeBatch","ops","self","map","_op","op","type","keyAsBuffer","prefix","valueAsBuffer","ltgtKeys","encodeLtgt","ltgt","ret","Object","keys","forEach","indexOf","createStreamDecoder","values","_","buffer"],"sources":["/home/tiptape/relearningculture/zkevm/frontend/node_modules/level-codec/index.js"],"sourcesContent":["var encodings = require('./lib/encodings');\n\nmodule.exports = Codec;\n\nfunction Codec(opts){\n  this.opts = opts || {};\n  this.encodings = encodings;\n}\n\nCodec.prototype._encoding = function(encoding){\n  if (typeof encoding == 'string') encoding = encodings[encoding];\n  if (!encoding) encoding = encodings.id;\n  return encoding;\n};\n\nCodec.prototype._keyEncoding = function(opts, batchOpts){\n  return this._encoding(batchOpts && batchOpts.keyEncoding\n    || opts && opts.keyEncoding\n    || this.opts.keyEncoding);\n};\n\nCodec.prototype._valueEncoding = function(opts, batchOpts){\n  return this._encoding(\n    batchOpts && (batchOpts.valueEncoding || batchOpts.encoding)\n    || opts && (opts.valueEncoding || opts.encoding)\n    || (this.opts.valueEncoding || this.opts.encoding));\n};\n\nCodec.prototype.encodeKey = function(key, opts, batchOpts){\n  return this._keyEncoding(opts, batchOpts).encode(key);\n};\n\nCodec.prototype.encodeValue = function(value, opts, batchOpts){\n  return this._valueEncoding(opts, batchOpts).encode(value);\n};\n\nCodec.prototype.decodeKey = function(key, opts){\n  return this._keyEncoding(opts).decode(key);\n};\n\nCodec.prototype.decodeValue = function(value, opts){\n  return this._valueEncoding(opts).decode(value);\n};\n\nCodec.prototype.encodeBatch = function(ops, opts){\n  var self = this;\n\n  return ops.map(function(_op){\n    var op = {\n      type: _op.type,\n      key: self.encodeKey(_op.key, opts, _op)\n    };\n    if (self.keyAsBuffer(opts, _op)) op.keyEncoding = 'binary';\n    if (_op.prefix) op.prefix = _op.prefix;\n    if ('value' in _op) {\n      op.value = self.encodeValue(_op.value, opts, _op);\n      if (self.valueAsBuffer(opts, _op)) op.valueEncoding = 'binary';\n    }\n    return op;\n  });\n};\n\nvar ltgtKeys = ['lt', 'gt', 'lte', 'gte', 'start', 'end'];\n\nCodec.prototype.encodeLtgt = function(ltgt){\n  var self = this;\n  var ret = {};\n  Object.keys(ltgt).forEach(function(key){\n    ret[key] = ltgtKeys.indexOf(key) > -1\n      ? self.encodeKey(ltgt[key], ltgt)\n      : ltgt[key]\n  });\n  return ret;\n};\n\nCodec.prototype.createStreamDecoder = function(opts){\n  var self = this;\n\n  if (opts.keys && opts.values) {\n    return function(key, value){\n      return {\n        key: self.decodeKey(key, opts),\n        value: self.decodeValue(value, opts)\n      };\n    };\n  } else if (opts.keys) {\n    return function(key) {\n      return self.decodeKey(key, opts);\n    }; \n  } else if (opts.values) {\n    return function(_, value){\n      return self.decodeValue(value, opts);\n    }\n  } else {\n    return function(){};\n  }\n};\n\nCodec.prototype.keyAsBuffer = function(opts){\n  return this._keyEncoding(opts).buffer;\n};\n\nCodec.prototype.valueAsBuffer = function(opts){\n  return this._valueEncoding(opts).buffer;\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}