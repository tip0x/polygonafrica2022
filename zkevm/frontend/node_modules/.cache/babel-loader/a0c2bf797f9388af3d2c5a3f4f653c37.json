{"ast":null,"code":"module.exports = PrioritizedTaskExecutor;\n\n/**\n * Executes tasks up to maxPoolSize at a time, other items are put in a priority queue.\n * @class PrioritizedTaskExecutor\n * @param {Number} maxPoolSize The maximum size of the pool\n * @prop {Number} maxPoolSize The maximum size of the pool\n * @prop {Number} currentPoolSize The current size of the pool\n * @prop {Array} queue The task queue\n */\nfunction PrioritizedTaskExecutor(maxPoolSize) {\n  this.maxPoolSize = maxPoolSize;\n  this.currentPoolSize = 0;\n  this.queue = [];\n}\n\n/**\n * Executes the task.\n * @param {Number} priority The priority of the task\n * @param {Function} task The function that accepts the callback, which must be called upon the task completion.\n */\nPrioritizedTaskExecutor.prototype.execute = function (priority, task) {\n  var self = this;\n  if (self.currentPoolSize < self.maxPoolSize) {\n    self.currentPoolSize++;\n    task(function () {\n      self.currentPoolSize--;\n      if (self.queue.length > 0) {\n        self.queue.sort(function (a, b) {\n          return b.priority - a.priority;\n        });\n        var item = self.queue.shift();\n        self.execute(item.priority, item.task);\n      }\n    });\n  } else {\n    self.queue.push({\n      priority: priority,\n      task: task\n    });\n  }\n};","map":{"version":3,"names":["module","exports","PrioritizedTaskExecutor","maxPoolSize","currentPoolSize","queue","prototype","execute","priority","task","self","length","sort","a","b","item","shift","push"],"sources":["/home/tiptape/relearningculture/zkevm/frontend/node_modules/merkle-patricia-tree/prioritizedTaskExecutor.js"],"sourcesContent":["module.exports = PrioritizedTaskExecutor\n\n/**\n * Executes tasks up to maxPoolSize at a time, other items are put in a priority queue.\n * @class PrioritizedTaskExecutor\n * @param {Number} maxPoolSize The maximum size of the pool\n * @prop {Number} maxPoolSize The maximum size of the pool\n * @prop {Number} currentPoolSize The current size of the pool\n * @prop {Array} queue The task queue\n */\nfunction PrioritizedTaskExecutor (maxPoolSize) {\n  this.maxPoolSize = maxPoolSize\n  this.currentPoolSize = 0\n  this.queue = []\n}\n\n/**\n * Executes the task.\n * @param {Number} priority The priority of the task\n * @param {Function} task The function that accepts the callback, which must be called upon the task completion.\n */\nPrioritizedTaskExecutor.prototype.execute = function (priority, task) {\n  var self = this\n\n  if (self.currentPoolSize < self.maxPoolSize) {\n    self.currentPoolSize++\n    task(function () {\n      self.currentPoolSize--\n      if (self.queue.length > 0) {\n        self.queue.sort(function (a, b) {\n          return b.priority - a.priority\n        })\n        var item = self.queue.shift()\n        self.execute(item.priority, item.task)\n      }\n    })\n  } else {\n    self.queue.push({\n      priority: priority,\n      task: task\n    })\n  }\n}\n"],"mappings":"AAAAA,MAAM,CAACC,OAAO,GAAGC,uBAAuB;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,uBAAuB,CAAEC,WAAW,EAAE;EAC7C,IAAI,CAACA,WAAW,GAAGA,WAAW;EAC9B,IAAI,CAACC,eAAe,GAAG,CAAC;EACxB,IAAI,CAACC,KAAK,GAAG,EAAE;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACAH,uBAAuB,CAACI,SAAS,CAACC,OAAO,GAAG,UAAUC,QAAQ,EAAEC,IAAI,EAAE;EACpE,IAAIC,IAAI,GAAG,IAAI;EAEf,IAAIA,IAAI,CAACN,eAAe,GAAGM,IAAI,CAACP,WAAW,EAAE;IAC3CO,IAAI,CAACN,eAAe,EAAE;IACtBK,IAAI,CAAC,YAAY;MACfC,IAAI,CAACN,eAAe,EAAE;MACtB,IAAIM,IAAI,CAACL,KAAK,CAACM,MAAM,GAAG,CAAC,EAAE;QACzBD,IAAI,CAACL,KAAK,CAACO,IAAI,CAAC,UAAUC,CAAC,EAAEC,CAAC,EAAE;UAC9B,OAAOA,CAAC,CAACN,QAAQ,GAAGK,CAAC,CAACL,QAAQ;QAChC,CAAC,CAAC;QACF,IAAIO,IAAI,GAAGL,IAAI,CAACL,KAAK,CAACW,KAAK,EAAE;QAC7BN,IAAI,CAACH,OAAO,CAACQ,IAAI,CAACP,QAAQ,EAAEO,IAAI,CAACN,IAAI,CAAC;MACxC;IACF,CAAC,CAAC;EACJ,CAAC,MAAM;IACLC,IAAI,CAACL,KAAK,CAACY,IAAI,CAAC;MACdT,QAAQ,EAAEA,QAAQ;MAClBC,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"script"}