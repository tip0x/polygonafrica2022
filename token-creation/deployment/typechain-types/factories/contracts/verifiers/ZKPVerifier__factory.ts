/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ZKPVerifier,
  ZKPVerifierInterface,
} from "../../../contracts/verifiers/ZKPVerifier";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "getSupportedRequests",
    outputs: [
      {
        internalType: "uint64[]",
        name: "arr",
        type: "uint64[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
    ],
    name: "getZKPRequest",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "schema",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slotIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "operator",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "circuitId",
            type: "string",
          },
        ],
        internalType: "struct ICircuitValidator.CircuitQuery",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "proofs",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "requestQueries",
    outputs: [
      {
        internalType: "uint256",
        name: "schema",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "slotIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "operator",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "circuitId",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "requestValidators",
    outputs: [
      {
        internalType: "contract ICircuitValidator",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        internalType: "contract ICircuitValidator",
        name: "validator",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "schema",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "slotIndex",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "operator",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "value",
            type: "uint256[]",
          },
          {
            internalType: "string",
            name: "circuitId",
            type: "string",
          },
        ],
        internalType: "struct ICircuitValidator.CircuitQuery",
        name: "query",
        type: "tuple",
      },
    ],
    name: "setZKPRequest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "requestId",
        type: "uint64",
      },
      {
        internalType: "uint256[]",
        name: "inputs",
        type: "uint256[]",
      },
      {
        internalType: "uint256[2]",
        name: "a",
        type: "uint256[2]",
      },
      {
        internalType: "uint256[2][2]",
        name: "b",
        type: "uint256[2][2]",
      },
      {
        internalType: "uint256[2]",
        name: "c",
        type: "uint256[2]",
      },
    ],
    name: "submitZKPResponse",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supportedRequests",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6112aa8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063b45c0fdf11610071578063b45c0fdf14610147578063b68967e214610185578063c76d084514610198578063f1435326146101b8578063f2fde38b146101e3578063fee207e6146101f657600080fd5b806337ba9523146100ae578063715018a6146100cc5780638da5cb5b146100d657806396bf4741146100fb578063a87231141461011e575b600080fd5b6100b6610209565b6040516100c39190610a0e565b60405180910390f35b6100d4610293565b005b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100c3565b61010e610109366004610a77565b6102a7565b6040516100c39493929190610ade565b6100e361012c366004610a77565b6003602052600090815260409020546001600160a01b031681565b610175610155366004610b22565b600160209081526000928352604080842090915290825290205460ff1681565b60405190151581526020016100c3565b610175610193366004610cb6565b61035a565b6101ab6101a6366004610a77565b610574565b6040516100c39190610dbb565b6101cb6101c6366004610e1b565b6106ce565b6040516001600160401b0390911681526020016100c3565b6100d46101f1366004610e34565b61070b565b610175610204366004610e51565b610784565b6060600480548060200260200160405190810160405280929190818152602001828054801561028957602002820191906000526020600020906000905b82829054906101000a90046001600160401b03166001600160401b0316815260200190600801906020826007010492830192600103820291508084116102465790505b5050505050905090565b61029b6108ff565b6102a56000610959565b565b6002602081905260009182526040909120805460018201549282015460048301805492949391926102d790610f78565b80601f016020809104026020016040519081016040528092919081815260200182805461030390610f78565b80156103505780601f1061032557610100808354040283529160200191610350565b820191906000526020600020905b81548152906001019060200180831161033357829003601f168201915b5050505050905084565b6001600160401b0385166000908152600360205260408120546001600160a01b03166103de5760405162461bcd60e51b815260206004820152602860248201527f76616c696461746f72206973206e6f742073657420666f7220746869732072656044820152671c5d595cdd081a5960c21b60648201526084015b60405180910390fd5b6001600160401b03861660009081526002602052604081205490036104515760405162461bcd60e51b8152602060048201526024808201527f7175657279206973206e6f742073657420666f722074686973207265717565736044820152631d081a5960e21b60648201526084016103d5565b6001600160401b03861660009081526003602090815260408083205460029092529182902091516319f8754160e21b81526001600160a01b03909116916367e1d504916104a991899189918991899190600401611058565b602060405180830381865afa1580156104c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ea9190611145565b6105365760405162461bcd60e51b815260206004820152601b60248201527f70726f6f6620726573706f6e7365206973206e6f742076616c6964000000000060448201526064016103d5565b3360009081526001602081815260408084206001600160401b038b1685528252909220805460ff191690911790556003905250600195945050505050565b6105a66040518060a0016040528060008152602001600081526020016000815260200160608152602001606081525090565b6001600160401b038216600090815260026020818152604092839020835160a08101855281548152600182015481840152928101548385015260038101805485518185028101850190965280865293949193606086019383018282801561062c57602002820191906000526020600020905b815481526020019060010190808311610618575b5050505050815260200160048201805461064590610f78565b80601f016020809104026020016040519081016040528092919081815260200182805461067190610f78565b80156106be5780601f10610693576101008083540402835291602001916106be565b820191906000526020600020905b8154815290600101906020018083116106a157829003601f168201915b5050505050815250509050919050565b600481815481106106de57600080fd5b9060005260206000209060049182820401919006600802915054906101000a90046001600160401b031681565b6107136108ff565b6001600160a01b0381166107785760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103d5565b61078181610959565b50565b600061078e6108ff565b6001600160401b0384166000908152600360205260409020546001600160a01b0316610812576004805460018101825560008290529081047f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160401b0380881660086003909516949094026101000a938402930219169190911790555b60608201516001600160401b0385166000908152600260209081526040909120825161084793600390920192909101906109ae565b506040808301516001600160401b03861660009081526002602081905292902091820155608083015160049091019061088090826111b5565b506020808301516001600160401b03861660009081526002909252604090912060018101919091558251815560808301516004909101906108c190826111b5565b50506001600160401b038316600090815260036020526040902080546001600160a01b0384166001600160a01b031990911617905560019392505050565b6000546001600160a01b031633146102a55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b505050565b8280548282559060005260206000209081019282156109e9579160200282015b828111156109e95782518255916020019190600101906109ce565b506109f59291506109f9565b5090565b5b808211156109f557600081556001016109fa565b6020808252825182820181905260009190848201906040850190845b81811015610a4f5783516001600160401b031683529284019291840191600101610a2a565b50909695505050505050565b80356001600160401b0381168114610a7257600080fd5b919050565b600060208284031215610a8957600080fd5b610a9282610a5b565b9392505050565b60008151808452602060005b82811015610ac0578481018201518682018301528101610aa5565b506000858301820152601f909101601f191690930190920192915050565b848152836020820152826040820152608060608201526000610b036080830184610a99565b9695505050505050565b6001600160a01b038116811461078157600080fd5b60008060408385031215610b3557600080fd5b8235610b4081610b0d565b9150610b4e60208401610a5b565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b60405160a081016001600160401b0381118282101715610b8f57610b8f610b57565b60405290565b604080519081016001600160401b0381118282101715610b8f57610b8f610b57565b604051601f8201601f191681016001600160401b0381118282101715610bdf57610bdf610b57565b604052919050565b600082601f830112610bf857600080fd5b813560206001600160401b03821115610c1357610c13610b57565b8160051b610c22828201610bb7565b9283528481018201928281019087851115610c3c57600080fd5b83870192505b84831015610c5b57823582529183019190830190610c42565b979650505050505050565b600082601f830112610c7757600080fd5b610c7f610b95565b806040840185811115610c9157600080fd5b845b81811015610cab578035845260209384019301610c93565b509095945050505050565b60008060008060006101408688031215610ccf57600080fd5b610cd886610a5b565b94506020808701356001600160401b03811115610cf457600080fd5b610d0089828a01610be7565b9550506040610d1189828a01610c66565b945088609f890112610d2257600080fd5b610d2a610b95565b806101008a018b811115610d3d57600080fd5b60808b015b81811015610d6157610d548d82610c66565b8452928501928401610d42565b50819650610d6f8c82610c66565b955050505050509295509295909350565b600081518084526020808501945080840160005b83811015610db057815187529582019590820190600101610d94565b509495945050505050565b602081528151602082015260208201516040820152604082015160608201526000606083015160a06080840152610df560c0840182610d80565b90506080840151601f198483030160a0850152610e128282610a99565b95945050505050565b600060208284031215610e2d57600080fd5b5035919050565b600060208284031215610e4657600080fd5b8135610a9281610b0d565b600080600060608486031215610e6657600080fd5b610e6f84610a5b565b9250602080850135610e8081610b0d565b925060408501356001600160401b0380821115610e9c57600080fd5b9086019060a08289031215610eb057600080fd5b610eb8610b6d565b82358152838301358482015260408301356040820152606083013582811115610ee057600080fd5b610eec8a828601610be7565b606083015250608083013582811115610f0457600080fd5b80840193505088601f840112610f1957600080fd5b823582811115610f2b57610f2b610b57565b610f3d601f8201601f19168601610bb7565b92508083528985828601011115610f5357600080fd5b8085850186850137600085828501015250816080820152809450505050509250925092565b600181811c90821680610f8c57607f821691505b602082108103610fac57634e487b7160e01b600052602260045260246000fd5b50919050565b8060005b6002811015610fd5578151845260209384019390910190600101610fb6565b50505050565b60008154610fe881610f78565b808552602060018381168015611005576001811461101f5761104d565b60ff1985168884015283151560051b88018301955061104d565b866000528260002060005b858110156110455781548a820186015290830190840161102a565b890184019650505b505050505092915050565b600061014080835261106c81840189610d80565b9050602061107c81850189610fb2565b606084018760005b60028110156110ab57611098838351610fb2565b6040929092019190830190600101611084565b5050506110bb60e0850187610fb2565b83820361012085015284548252600180860154828401526002860154604084015260a0606084018190526003870180549185018290526000908152838120929160c08601905b8083101561111e5784548252938301939183019190850190611101565b5085810360808701526111348160048b01610fdb565b9d9c50505050505050505050505050565b60006020828403121561115757600080fd5b81518015158114610a9257600080fd5b601f8211156109a957600081815260208120601f850160051c8101602086101561118e5750805b601f850160051c820191505b818110156111ad5782815560010161119a565b505050505050565b81516001600160401b038111156111ce576111ce610b57565b6111e2816111dc8454610f78565b84611167565b602080601f83116001811461121757600084156111ff5750858301515b600019600386901b1c1916600185901b1785556111ad565b600085815260208120601f198616915b8281101561124657888601518255948401946001909101908401611227565b50858210156112645787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212209e3305531b57080209b7ae07d03adab9564b3b1b629168d2931a02f6ff8c255464736f6c63430008110033";

type ZKPVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKPVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKPVerifier__factory extends ContractFactory {
  constructor(...args: ZKPVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZKPVerifier> {
    return super.deploy(overrides || {}) as Promise<ZKPVerifier>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ZKPVerifier {
    return super.attach(address) as ZKPVerifier;
  }
  override connect(signer: Signer): ZKPVerifier__factory {
    return super.connect(signer) as ZKPVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKPVerifierInterface {
    return new utils.Interface(_abi) as ZKPVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKPVerifier {
    return new Contract(address, _abi, signerOrProvider) as ZKPVerifier;
  }
}
